//Input defined here
input int 0
//End of input
random int 0

//start of power def
//start input

base int 2
exponend int 16

//end input
exponstart int 1
exponans int 0
basecopy int 0
basecon int 0
//end of power def

//start of ran def
a int 1664525
c int 1013904223
m int 0
x int 
powerto
	load r1, base
	load r2, exponstart
	load r3, exponend
	loadk r4, 1
	load r5, basecon
	
	
	sub r5, r4
	jmpNZero r5, powertoload

	mult r1, r6
	store r1, base
	add r2, r4
	store r2, exponstart
	
	//check for end of multiplying 
	sub r3, r2
	jmpNZero r3, powerto
	
	PrintMsg	""
	PrintMsg	"The Product of Powerto method is: "
	PrintReg	r1
	store r1, m
	jmp endgram

powertoload
	//this is to control the multiple
	load r5, basecon
	add r5, r4
	store r5, basecon
	
	load r6, basecopy
	copy r6, r1
	store r6, basecopy
	jmp powerto

ran
	load r1, a
	load r2, c
	load r3, m
	
compare
	load r1, input
	load r2, random
	
	sub r2, r1
	jmpNeg r2, lower
	jmpPos r2, higher
	PrintMsg	"               YOU WON!!!!!!"
	endgram

higher
	PrintMsg	"Higher!!"
	jmp compare
lower
	PrintMsg	"Lower"
	jmp compare
	
endgram
	PrintMsg	""
	PrintMsg	"============================================="
	PrintMsg	"                End Of Program"
	PrintMsg	"              by Derrick Lockwood"
	PrintMsg	"============================================="
	PrintMsg	""
	return
	
main
	PrintMsg	""
	PrintMsg	"============================================="
	PrintMsg	"               Start of Numgame v 1.0              "
	PrintMsg	"============================================="
	PrintMsg	""
	readchar input
	jmp powerto
