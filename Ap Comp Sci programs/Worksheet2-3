//problem 1 definitions
amt int 101
charge int 5
ones int 1
cash int 200
//end problem 1 definitions
//problem 2 definitions
char int 0
zero int 48
nine int 58
q int 113

prob1
	load r1, amt
	loadk, r2, 100
	load r3 charge
	load r4, ones
	load r5 cash
	
	sub r1, r2
	jmpPos r1, else1
	add r3, r1
	store r3, charge
	PrintMsg	"Contents of charge & 5 + 101 = 106"
	PrintReg	r3
	div r1, r2
	store r1, ones
	PrintMsg	""
	PrintMsg	"Contents of ones & 101/100 = 1.01"
	PrintReg	r1
	PrintReg	r2
	jmp prob2
else1
	load r1, amt
	load r2, cash
	sub r2, r1
	store r2, cash
	PrintMsg	"Contents of cash & 200 - 101 = 99"
	PrintReg	r2
	jmp prob2
prob2
	PrintMsg	""
	PrintMsg	"Enter in box above^ To quit write (n)"
	readChar char
	
	load r1, char
	load r2, zero
	load r3, nine
	load r5, q
	copy r4, r1	//copy to dummy registar
	
	PrintMsg	"Contents of char: "
	PrintReg	r1
	PrintMsg	""
	
	sub r1, r5
	jmpZero r1, endgram
	copy r1, r4
	
	
	//Checking Number
	sub r1, r2
	jmpNeg r1, else2
	//used to shorten the code instead of two ifs just included
	copy r1, r4
	
	sub r1, r3
	jmpPos r1, else2
	copy r1, r4
	PrintMsg	"IS a decimal digit"
	jmp prob2
else2
	PrintMsg	"NOT a decimal digit"
	jmp prob2
endgram
	PrintMsg	""
	PrintMsg	"============================================="
	PrintMsg	"                End Of Program"
	PrintMsg	"              by Derrick Lockwood"
	PrintMsg	"============================================="
	PrintMsg	""
	return
main
	PrintMsg	""
	PrintMsg	"============================================="
	PrintMsg	"               Start of Program              "
	PrintMsg	"============================================="
	PrintMsg	""
	jmp prob1