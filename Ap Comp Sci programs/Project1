//Start of Load
char1 int 48
char2 int 48
zero int 48
nine int 58
ten int 10
tilda int 126
x int 120
//Start of Index
A int 65
B int 66
C int 67
D int 68
E int 69
F int 70
//End of Index
//End of Load

getInput
	//Read in input
	PrintMsg	""
	PrintMsg	""
	PrintMsg	"Input a two decimal digit or ~ and a character to exit"
	PrintMsg 	""
	readchar char1
	readchar char2
	jmp check		
check
	load r1, char1
	load r2, char2
	load r3, zero
	load r4, nine
	load r5, tilda
	copy r6, r1	//copy to "dummy" register
	copy r7, r2	//copy to "dummy" registar
		
	//Check for exit with the return
	sub r1, r5
	sub r2, r5
	jmpZero r1, endgram
	jmpZero r2, endgram
	copy r1, r6
	copy r2, r7
	
	
	//Checking Number
	sub r1, r3
	sub r2, r3
	jmpNeg r1, nodigit1
	jmpNeg r2, nodigit2
	//used to shorten the code instead of two ifs just included
	copy r1, r6
	copy r2, r7
	
	sub r1, r4
	sub r2, r4
	jmpPos r1, nodigit1
	jmpPos r2, nodigit2
	copy r1, r6
	copy r2, r7
	jmp hexconvert

nodigit1
	PrintMsg	"First Character not a Digit"
	jmp getInput
nodigit2
	PrintMsg	"Second Character not a Digit"
	jmp getInput
hexconvert
	load r8, ten
	loadk r9, 16
	sub r1, r3
	sub r2, r3
	mult r1, r8
	add r1, r2
	
	//PrintMsg	""
	//PrintReg	r1
	//PrintMsg	""
	
	div r1, r9
	
	//PrintMsg	""
	//PrintReg	r1
	//PrintReg	r2
	//PrintMsg	""

	PrintMsg	"This is the hexadecimal value of what you Entered: "
	
	writechar zero
	writechar x
	writechar zero
	writechar zero

	add r1, r3
	store r1, char1
	writechar char1
	
	copy r4, r2 //used to revert to original to edit with
	sub r2, r8
	jmpNeg r2, number
	copy r2, r4
	jmp letter
number
	copy r2, r4
	add r2, r3
	store r2, char2
	writechar char2
	
	jmp getInput
letter
	copy r2, r4
	sub r2, r8
	load r2, A, r2
	store r2, char2
	writechar char2
	
	jmp getInput
endgram
	PrintMsg	""
	PrintMsg	"============================================="
	PrintMsg	"                End Of Program"
	PrintMsg	"              by Derrick Lockwood"
	PrintMsg	"============================================="
	PrintMsg	""
	//End of PC
	return
main
	//Start of PC
	PrintMsg	""
	PrintMsg	""
	PrintMsg	"============================================="
	PrintMsg	"               Start of Program              "
	PrintMsg	"============================================="
	PrintMsg	""
	PrintMsg	""
	jmp getInput